import { useState } from "react";
import { FaEye } from "react-icons/fa";

const dummyCandidates = [
  { id: 1, name: "John Doe", skills: ["React", "Node.js", "Tailwind"], experience: 3, salary: 8, education: "B.Tech" },
  { id: 2, name: "Jane Smith", skills: ["Python", "Django", "AWS"], experience: 5, salary: 12, education: "MCA" },
  { id: 3, name: "Alice Johnson", skills: ["Java", "Spring", "MySQL"], experience: 4, salary: 10, education: "B.Tech" },
];

const SearchResumePage = () => {
  const [filters, setFilters] = useState({ skills: [], minExp: 0, maxExp: 10, minSalary: 0, maxSalary: 20, education: "" });
  const [results, setResults] = useState(dummyCandidates);

  const handleFilterChange = (e) => {
    const { name, value } = e.target;
    setFilters((prev) => ({ ...prev, [name]: value }));
  };

  const handleSkillsChange = (e) => {
    const value = e.target.value.split(",").map((s) => s.trim());
    setFilters((prev) => ({ ...prev, skills: value }));
  };

  const applyFilters = () => {
    const filtered = dummyCandidates.filter((c) => {
      const skillsMatch = filters.skills.length === 0 || filters.skills.every((s) => c.skills.includes(s));
      const expMatch = c.experience >= filters.minExp && c.experience <= filters.maxExp;
      const salaryMatch = c.salary >= filters.minSalary && c.salary <= filters.maxSalary;
      const eduMatch = !filters.education || c.education === filters.education;
      return skillsMatch && expMatch && salaryMatch && eduMatch;
    });
    setResults(filtered);
  };

  return (
    <div className="flex flex-col min-h-screen bg-gray-100">
      {/* Navbar */}
      <nav className="bg-blue-800 text-white px-6 py-4 flex justify-between items-center">
        <h1 className="text-xl font-bold">Dashboard</h1>
        <div className="space-x-4">
          <button className="hover:underline">Home</button>
          <button className="hover:underline">Reports</button>
          <button className="hover:underline">Settings</button>
        </div>
      </nav>

      {/* Page Content */}
      <div className="flex flex-1">
        {/* Sidebar Filters */}
        <div className="w-1/4 p-6 bg-white shadow-lg rounded m-4">
          <h2 className="text-xl font-semibold mb-6 border-b pb-2">Filters</h2>

          <div className="mb-5">
            <label className="block font-medium mb-1">Skills (comma separated)</label>
            <input
              type="text"
              placeholder="React, Node.js"
              value={filters.skills.join(", ")}
              onChange={handleSkillsChange}
              className="w-full border border-gray-300 px-3 py-2 rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>

          <div className="mb-5">
            <label className="block font-medium mb-1">Total Experience (years)</label>
            <div className="flex gap-2">
              <input type="number" name="minExp" placeholder="Min" value={filters.minExp} onChange={handleFilterChange} className="w-1/2 border border-gray-300 px-2 py-1 rounded focus:outline-none focus:ring-2 focus:ring-blue-500" />
              <input type="number" name="maxExp" placeholder="Max" value={filters.maxExp} onChange={handleFilterChange} className="w-1/2 border border-gray-300 px-2 py-1 rounded focus:outline-none focus:ring-2 focus:ring-blue-500" />
            </div>
          </div>

          <div className="mb-5">
            <label className="block font-medium mb-1">Salary Expectation (LPA)</label>
            <div className="flex gap-2">
              <input type="number" name="minSalary" placeholder="Min" value={filters.minSalary} onChange={handleFilterChange} className="w-1/2 border border-gray-300 px-2 py-1 rounded focus:outline-none focus:ring-2 focus:ring-blue-500" />
              <input type="number" name="maxSalary" placeholder="Max" value={filters.maxSalary} onChange={handleFilterChange} className="w-1/2 border border-gray-300 px-2 py-1 rounded focus:outline-none focus:ring-2 focus:ring-blue-500" />
            </div>
          </div>

          <div className="mb-5">
            <label className="block font-medium mb-1">Education</label>
            <select name="education" value={filters.education} onChange={handleFilterChange} className="w-full border border-gray-300 px-3 py-2 rounded focus:outline-none focus:ring-2 focus:ring-blue-500">
              <option value="">Any</option>
              <option value="B.Tech">B.Tech</option>
              <option value="MCA">MCA</option>
              <option value="MBA">MBA</option>
            </select>
          </div>

          <button onClick={applyFilters} className="w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition duration-200">
            Apply Filters
          </button>
        </div>

        {/* Main Table */}
        <div className="flex-1 p-6 m-4 bg-white rounded shadow-lg overflow-x-auto">
          <h1 className="text-2xl font-bold mb-4">Search Resume ({results.length} candidates found)</h1>

          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-gray-50">
              <tr>
                {["Name", "Skills", "Experience", "Salary", "Education", "Actions"].map((th) => (
                  <th key={th} className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">{th}</th>
                ))}
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-200">
              {results.length === 0 ? (
                <tr>
                  <td colSpan={6} className="px-6 py-4 text-center text-gray-500">No candidates found for selected filters.</td>
                </tr>
              ) : (
                results.map((c) => (
                  <tr key={c.id} className="hover:bg-gray-50 transition-colors duration-200">
                    <td className="px-6 py-4 whitespace-nowrap">{c.name}</td>
                    <td className="px-6 py-4 whitespace-nowrap">{c.skills.join(", ")}</td>
                    <td className="px-6 py-4 whitespace-nowrap">{c.experience}</td>
                    <td className="px-6 py-4 whitespace-nowrap">{c.salary}</td>
                    <td className="px-6 py-4 whitespace-nowrap">{c.education}</td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <button className="flex items-center gap-2 bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700 transition duration-200">
                        <FaEye size={12} /> View
                      </button>
                    </td>
                  </tr>
                ))
              )}
            </tbody>
          </table>
        </div>
      </div>

      {/* Footer */}
      <footer className="bg-gray-800 text-white text-center py-4 mt-auto">
        &copy; {new Date().getFullYear()} Your Company. All rights reserved.
      </footer>
    </div>
  );
};

export default SearchResumePage;
